module "vpc" {
  source = "terraform-aws-modules/vpc/aws"
  name = "my-vpc"
  cidr = "10.0.0.0/16"
  azs             = ["eu-west-1a", "eu-west-1b", "eu-west-1c"]
  private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
  public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]
  enable_nat_gateway = true
  enable_vpn_gateway = true
  tags = {
    Environment = "dev"
  }
}



resource "aws_route53_record" "www" {
  zone_id = aws_route53_zone.primary.zone_id
  name    = "www.sachinkapale.com"
  type    = "A"
  ttl     = "300"
  records = [aws_eip.lb.public_ip]
}


resource "aws_lb" "sample" {
  name               = "sample-lb-tf"
  internal           = true
  load_balancer_type = "application"
  security_groups    = [aws_security_group.lb_sg.id]
  subnets            = [for subnet in aws_subnet.private : subnet.id]

  enable_deletion_protection = true

  access_logs {
    bucket  = aws_s3_bucket.lb_logs.bucket
    prefix  = "sample-lb"
    enabled = true
  }

  tags = {
    Environment = "test"
  }
}

resource "aws_cloud9_environment_ec2" "sample" {
  instance_type = "t3.micro"
  name          = "sample-env"
}


resource "aws_db_instance" "default" {
  allocated_storage    = 40
  engine               = "mysql"
  engine_version       = "5.7"
  instance_class       = "db.t3.micro"
  name                 = "mysqldb"
  username             = "foo"
  password             = "foobar@123"
  parameter_group_name = "default.mysql5.7"
  skip_final_snapshot  = false
}


resource "aws_mq_broker" "sample" {
  broker_name = "immutable"

  configuration {
    id       = aws_mq_configuration.test.id
    revision = aws_mq_configuration.test.latest_revision
  }

  engine_type        = "ActiveMQ"
  engine_version     = "5.15.9"
  host_instance_type = "mq.t2.micro"
  security_groups    = [aws_security_group.test.id]

  user {
    username = "SampleUser"
    password = "MindTheGap"
  }
}


module "memory_db" {
  
  # Cluster
  name        = "sample"
  description = "sample MemoryDB"

  engine_version             = "6.2"
  auto_minor_version_upgrade = false
  node_type                  = "db.t4g.small"
  num_shards                 = 3
  num_replicas_per_shard     = 3
  tls_enabled              = false
  security_group_ids       = ["sg-45678"]
  maintenance_window       = "sun:03:00-mon:01:30"
  
  # Users
  users = {
    admin = {
      user_name     = "admin"
      access_string = "&&&&on&*+@al"
      passwords     = ["YouShouldSelectImmutableInfrastructure13!"]
      tags          = { User = "admin" }
    }
      }

    tags = {
    Terraform   = "true"
    Environment = "prod"
  }
}





resource "aws_waf_geo_match_set" "geo_match_set" {
  name = "geo_match_set"

  geo_match_constraint {
    type  = "Country"
    value = "US"
  }

  geo_match_constraint {
    type  = "Country"
    value = "CA"
  }
}


resource "aws_efs_file_system" "sample_lifecyle_policy" {
  creation_token = "test-product"

  lifecycle_policy {
    transition_to_ia = "AFTER_30_DAYS"
  }
}


resource "aws_s3_bucket" "b" {
  bucket = "my-tf-sample-bucket"

  tags = {
    Name        = "Immutable Infra bucket"
    Environment = "Prod"
  }
}

resource "aws_s3_bucket_acl" "sample" {
  bucket = aws_s3_bucket.b.id
  acl    = "private"
}


resource "aws_acm_certificate" "immucert" {
  domain_name       = "example.com"
  validation_method = "DNS"

  tags = {
    Environment = "test"
  }

  lifecycle {create_before_destroy = false
  }
}
